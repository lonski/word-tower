package pl.lonski.wordtower;

import java.util.Arrays;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.Stage;

import pl.lonski.wordtower.generators.GeneratedStageIterator;

class MenuStage extends Stage {

	private static final String START_ALL = "Start all";
	private static final String START_PREDEFINED = "Start all predefined levels";
	private static final String START_GENERATED = "Start autogenerated levels";

	private final WordTower game;

	MenuStage(WordTower game) {
		this.game = game;

		float screenWidth = Gdx.graphics.getWidth();
		float screenHeight = Gdx.graphics.getHeight();

		float y = screenHeight - 50;
		for (String button : Arrays.asList(START_GENERATED, START_PREDEFINED, START_ALL)) {
			float x = screenWidth / 2 - Word.widthOf(button) / 2;
			Word word = new Word(game.getWorldManager().getWorld(), button, x, y);
			y += word.getHeight() * 1.2;
			addActor(word);
		}
	}

	@Override
	public boolean keyTyped(char character) {
		for (Actor actor : getActors()) {
			Word word = (Word) actor;
			word.eatCharacter(character);
			if (word.isCompleted()) {
				switch (word.getText()) {
				case START_ALL:
					game.startGame(new MixedStageIterator());
					break;
				case START_PREDEFINED:
					game.startGame(new PredefinedStageIterator());
					break;
				case START_GENERATED:
					game.startGame(new GeneratedStageIterator());
					break;
				}
				break;
			}
		}
		return true;
	}
}
